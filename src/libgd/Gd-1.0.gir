<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="3.0"/>
  <c:include name="libgd/gd.h"/>
  <namespace name="Gd"
             version="1.0"
             shared-library=""
             c:identifier-prefixes="Gd"
             c:symbol-prefixes="gd">
    <class name="Notification"
           c:symbol-prefix="notification"
           c:type="GdNotification"
           parent="Gtk.Bin"
           glib:type-name="GdNotification"
           glib:get-type="gd_notification_get_type"
           glib:type-struct="NotificationClass">
      <doc xml:space="preserve">#GdNotification is a widget made for showing notifications to
the user, allowing them to close the notification or wait for it
to time out.

#GdNotification provides one signal (#GdNotification::dismissed), for when the notification
times out or is closed.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gd_notification_new">
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="dismissed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Notification" c:type="GdNotification*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="dismiss" c:identifier="gd_notification_dismiss">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <type name="Notification" c:type="GdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_show_close_button"
              c:identifier="gd_notification_set_show_close_button">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <type name="Notification" c:type="GdNotification*"/>
          </instance-parameter>
          <parameter name="show_close_button" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeout" c:identifier="gd_notification_set_timeout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <type name="Notification" c:type="GdNotification*"/>
          </instance-parameter>
          <parameter name="timeout_sec" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="show-close-button"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="timeout"
                version="0.1"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The time it takes to hide the widget, in seconds.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="NotificationPrivate" c:type="GdNotificationPrivate*"/>
      </field>
      <glib:signal name="dismissed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="NotificationClass"
            c:type="GdNotificationClass"
            glib:is-gtype-struct-for="Notification">
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="dismissed">
        <callback name="dismissed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Notification" c:type="GdNotification*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="NotificationPrivate"
            c:type="GdNotificationPrivate"
            disguised="1">
    </record>
    <function name="create_symbolic_icon"
              c:identifier="gd_create_symbolic_icon">
      <return-value transfer-ownership="full">
        <type name="Gio.Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="base_size" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="embed_image_in_frame"
              c:identifier="gd_embed_image_in_frame">
      <return-value transfer-ownership="full">
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="source_image" transfer-ownership="none">
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="frame_image_url" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="slice_width" transfer-ownership="none">
          <type name="Gtk.Border" c:type="GtkBorder*"/>
        </parameter>
        <parameter name="border_width" transfer-ownership="none">
          <type name="Gtk.Border" c:type="GtkBorder*"/>
        </parameter>
      </parameters>
    </function>
    <function name="ensure_types" c:identifier="gd_ensure_types">
      <doc xml:space="preserve">This functions must be called during initialization
to make sure the widget types are available to GtkBuilder.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="entry_focus_hack" c:identifier="gd_entry_focus_hack">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entry" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <type name="Gdk.Device" c:type="GdkDevice*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
